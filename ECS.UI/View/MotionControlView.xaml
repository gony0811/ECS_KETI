<UserControl x:Class="ECS.UI.View.MotionControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ECS.UI.View"
             xmlns:behaviors="clr-namespace:ECS.UI.Behaviors"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             PreviewKeyDown="UserControl_KeyDown"
             PreviewKeyUp="UserControl_PreviewKeyUp"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             xmlns:Converter="clr-namespace:ECS.UI.Converter"
             xmlns:Command="clr-namespace:ECS.UI" 
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600">


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>

    <UserControl.DataContext>
        <Binding Path="MotionControlViewModel" Source="{StaticResource Locator}"/>
    </UserControl.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="PreviewKeyDown">
            <mvvm:EventToCommand Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewKeyUp">
            <mvvm:EventToCommand Command="{Binding KeyUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <mvvm:EventToCommand Command="{Binding LoadedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <mvvm:EventToCommand Command="{Binding UnloadedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <GroupBox Header="◎ MOTION CONTROL" Margin="0" >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Converter:StringToDoubleConverter x:Key="StringToDoubleConverter"/>
                <Converter:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
            </Grid.Resources>


            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="X-Velocity" HorizontalAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3"/>
                        <Label Content="{Binding XAxisVelocity, StringFormat=F2, Converter={StaticResource DoubleToStringConverter}}" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" HorizontalContentAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3" Width="100"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Y-Velocity" HorizontalAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3"/>
                        <Label Content="{Binding YAxisVelocity, StringFormat=F2, Converter={StaticResource DoubleToStringConverter}}" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" HorizontalContentAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3" Width="100"/>
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Horizontal" >
                        <Label Content="X-Position" HorizontalAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3"/>
                        <Label Content="{Binding XAxisPosition, StringFormat=F3, Converter={StaticResource DoubleToStringConverter}}" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" HorizontalContentAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3" Width="100"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Y-Position" HorizontalAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3"/>
                        <Label Content="{Binding YAxisPosition, StringFormat=F3, Converter={StaticResource DoubleToStringConverter}}" BorderBrush="LightGray" BorderThickness="2" Background="Black" Foreground="LightGreen" HorizontalContentAlignment="Center" FontFamily="7SegFontFamily" FontSize="14" Margin="3" Width="100"/>
                    </StackPanel>
                </StackPanel>





            </Grid>

            <Border Grid.Row="1" Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />


            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>




                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4">
                    <RadioButton Content="X-AXIS" IsChecked="{Binding RadioButtonXAxisIsChecked}" Margin="5"  FontSize="18" VerticalContentAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <mvvm:EventToCommand Command="{Binding RadioButtonXAxisCheckedCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton Content="Y-AXIS" IsChecked="{Binding RadioButtonYAxisIsChecked}" Margin="5" FontSize="18" VerticalContentAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <mvvm:EventToCommand Command="{Binding RadioButtonYAxisCheckedCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                </StackPanel>

                <Border Grid.Row="1" Grid.ColumnSpan="5" Margin="5" Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />


                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left" Grid.ColumnSpan="3">
                    <Button x:Name="ButtonServo" Margin="5" Width="100" Content="{Binding ButtonServoContent}" Command="{Binding ButtonServoCommand}" IsEnabled="{Binding ButtonServoEnable}"/>
                    <Button x:Name="ButtonServoKillAll" Margin="5" Width="100" Content="{Binding ButtonKillAllContent}" Command="{Binding ButtonServoKillAllCommand}" IsEnabled="{Binding ButtonServoKillAllEnable}"/>
                </StackPanel>
                <StackPanel Grid.Row="3" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button x:Name="ButtonHomming" Margin="5" Width="100"  Content="{Binding ButtonHommingContent}" Command="{Binding ButtonHommingCommand}" IsEnabled="{Binding ButtonHommingEnable}"/>
                    <Button x:Name="ButtonJogPlus" Margin="5" Width="100" Content="{Binding ButtonJogPlusContent}" IsEnabled="{Binding ButtonJogPlusEnable}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <mvvm:EventToCommand Command="{Binding JogPlusPreviewMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <mvvm:EventToCommand Command="{Binding JogPlusPreviewMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button x:Name="ButtonJogMinus" Margin="5" Width="100" Content="{Binding ButtonJogMinusContent}" IsEnabled="{Binding ButtonJogMinusEnable}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <mvvm:EventToCommand Command="{Binding JogMinusPreviewMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <mvvm:EventToCommand Command="{Binding JogMinusPreviewMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <!--Button Content="SET" Command="{Binding JogSpeedSelectedCommand}" Margin="5" Width="60"/-->
                    <!--<ToggleButton x:Name="btnJogSpeed" Margin="5" IsChecked="{Binding ToggleButtonJogSpeedHighLow}" Width="50">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <mvvm:EventToCommand Command="{Binding JogSpeedHighCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <mvvm:EventToCommand Command="{Binding JogSpeedLowCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>-->
                    <!--<TextBlock Text="{Binding TextBlockJogSpeedHighLow}" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>-->
                </StackPanel>
                <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" Margin="5" Grid.ColumnSpan="2">
                    <Label Content="{Binding LabelAbsoluteMove}" FontSize="14" Width="Auto" Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Label Content="위치 :" FontSize="14" Width="50" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5"/>
                        <mah:NumericUpDown Value="{Binding AbsolutePosition}" StringFormat="N3" Minimum="{Binding PositionLimitMin}" Maximum="{Binding PositionLimitMax}" Interval="{Binding PositionInterval}" Width="120" Margin="5" HorizontalContentAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <mvvm:EventToCommand Command="{Binding AbsolutePositionInputCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </mah:NumericUpDown>
                        <Label Content="(mm)" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Label Content="속도:" FontSize="14" Width="50" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5"/>
                        <mah:NumericUpDown Value="{Binding AbsoluteVelocity}" StringFormat="N3"  Minimum="{Binding VelocityLimitMin}" Maximum="{Binding VelocityLimitMax}" Interval="{Binding VelocityInterval}" Width="120" Margin="5" HorizontalContentAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <mvvm:EventToCommand Command="{Binding AbsoluteVelocityInputCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </mah:NumericUpDown>
                        <Label Content="(mm/s)" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                    <Button Content="{Binding ButtonAbsoluteMoveContent}" Command="{Binding ButtonAbsoluteMoveCommand}" IsEnabled="{Binding ButtonAbsoluteMoveEnable}" Margin="5"/>
                </StackPanel>
                <StackPanel Grid.Row="4" Grid.Column="2" Orientation="Vertical" HorizontalAlignment="Center" Margin="5" Grid.ColumnSpan="2">
                    <Label Content="{Binding LabelRelativeMove}" FontSize="14" Width="Auto" Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Label Content="거리 :" FontSize="14" Width="50" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5"/>
                        <mah:NumericUpDown Value="{Binding MoveDistance}" StringFormat="N3" Interval="{Binding PositionInterval}" Width="120" Margin="5" HorizontalContentAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <mvvm:EventToCommand Command="{Binding MoveDistanceInputCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </mah:NumericUpDown>
                        <Label Content="(mm)" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Label Content="속도 :" FontSize="14" Width="50" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5"/>
                        <mah:NumericUpDown Value="{Binding RelativeVelocity}" StringFormat="N3"  Minimum="{Binding VelocityLimitMin}" Maximum="{Binding VelocityLimitMax}" Interval="{Binding VelocityInterval}" Width="120" Margin="5" HorizontalContentAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <mvvm:EventToCommand Command="{Binding RelativeVelocityInputCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </mah:NumericUpDown>
                        <Label Content="(mm/s)" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="{Binding ButtonRelativePlusMoveContent}" Command="{Binding ButtonRelativePlusMoveCommand}" IsEnabled="{Binding ButtonRelativeMoveEnable}" Margin="5" MinWidth="120"/>
                        <Button Content="{Binding ButtonRelativeMinusMoveContent}" Command="{Binding ButtonRelativeMinusMoveCommand}" IsEnabled="{Binding ButtonRelativeMoveEnable}" Margin="5" MinWidth="120"/>
                    </StackPanel>

                </StackPanel>
            </Grid>

            <Border Grid.Row="3" Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />

            <StackPanel Grid.Row="4" Orientation="Vertical">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="{Binding ButtonSetPositionContent}" Command="{Binding ButtonSetPositionCommand}" IsEnabled="{Binding ButtonSetPositionEnable}" Margin="5" Width="120"/>
                    <Button Content="{Binding ButtonVisionMoveContent}" Command="{Binding ButtonVisionMoveCommand}" IsEnabled="{Binding ButtonVisionMoveEnable}" Margin="5" Width="120"/>
                    <Button Content="{Binding ButtonProcessMoveContent}" Command="{Binding ButtonProcessMoveCommand}" IsEnabled="{Binding ButtonProcessMoveEnable}" Margin="5" Width="120"/>
                    <Button Content="{Binding ButtonMoveStopContent}" Command="{Binding ButtonMoveStopCommand}" IsEnabled="{Binding ButtonMoveStopEnable}" Margin="5" Width="120"/>
                </StackPanel>
            </StackPanel>

            <Border Grid.Row="5" Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />


            <Grid Grid.Row="6" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5" Grid.Row="0" Grid.ColumnSpan="2" Width="200">
                    <Label Content="조그 속도 :"  VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    <ComboBox ItemsSource="{Binding JogSpeedModeList}" SelectedValue="{Binding SelectedJogSpeed}" IsSynchronizedWithCurrentItem="True" IsReadOnly="True" HorizontalAlignment="Center" SelectedIndex="0" Width="100">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <mvvm:EventToCommand Command="{Binding JogSpeedSelectedCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </StackPanel>

                <Button Content="LEFT-UP" Grid.Column="1" Grid.Row="1" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogLeftUpMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogLeftUpMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button Content="RIGHT-UP" Grid.Column="3" Grid.Row="1" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogRightUpMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogRightUpMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button Content="LEFT-DN" Grid.Column="1" Grid.Row="3" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogLeftDownMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogLeftDownMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button Content="RIGHT-DN" Grid.Column="3" Grid.Row="3" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogRightDownMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogRightDownMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>


                <Button Content="UP" Grid.Column="2" Grid.Row="1" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogUpMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogUpMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="LEFT" Grid.Column="1" Grid.Row="2" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogLeftMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogLeftMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="RIGHT" Grid.Column="3" Grid.Row="2" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogRightMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogRightMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="DOWN" Grid.Column="2" Grid.Row="3" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <mvvm:EventToCommand Command="{Binding JogDownMouseLeftButtonDownCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <mvvm:EventToCommand Command="{Binding JogDownMouseLeftButtonUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </Grid>


        </Grid>
    </GroupBox>
</UserControl>
